service: socialroomtemperature

provider:
  name: aws
  runtime: dotnetcore2.1
  region: eu-west-1
  stage: dev

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
      Resource: "*"

package:
  individually: true

functions:
  create:
    handler: CsharpHandlers::AwsDotnetCsharp.CreateMeetingHandler::EntryMethod
    events:
      - http:
          path: meeting/create
          method: post
    package:
      artifact: bin/release/netcoreapp2.1/CreateMeeting.zip
  list:
    handler: CsharpHandlers::AwsDotnetCsharp.ListMeetingsHandler::EntryMethod
    events:
      - http:
          path: meeting/list
          method: get
    package:
      artifact: bin/release/netcoreapp2.1/ListMeetings.zip
  create-feedback:
    handler: CsharpHandlers::AwsDotnetCsharp.CreateMeetingFeedbackHandler::EntryMethod
    events:
      - http:
          path: meeting/feedback/create
          method: post
    package:
      artifact: bin/release/netcoreapp2.1/CreateMeetingFeedback.zip

resources:
  Resources:
    meetings:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.meetingTableName}
        AttributeDefinitions:
          - AttributeName: MeetingId
            AttributeType: S
        KeySchema:
          - AttributeName: MeetingId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    meetingFeedback:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.meetingFeedbackTableName}
        AttributeDefinitions:
          - AttributeName: MeetingId
            AttributeType: S
        KeySchema:
          - AttributeName: MeetingId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      
          

custom:
  prefix: ${self:service}-
  meetingTableName: ${self:custom.prefix}meeting
  meetingFeedbackTableName: ${self:custom.prefix}meeting-feedback

